require 'open3'
react_native_pods_rb = Open3.capture2("node -p 'require.resolve(\"react-native/scripts/react_native_pods.rb\", {paths: [\"#{__dir__}\"]})'").first.strip
require react_native_pods_rb

platform :ios, '14.0'
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'LearnProAi' do
  config = use_native_modules!
  use_frameworks! :linkage => :static

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :hermes_enabled => true 
  )

  # Add Firebase pods
  pod 'Firebase/Auth', :modular_headers => true
  pod 'Firebase/Firestore', :modular_headers => true
  pod 'Firebase/Messaging', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true

  pod 'GoogleUtilities', :modular_headers => true

  pod 'RNFS', :path => '../node_modules/react-native-fs'
  
  target 'LearnProAiTests' do
    inherit! :complete
  end

  post_install do |installer|
    react_native_post_install(installer)
    installer.pods_project.targets.each do |target|
      if target.name == 'ReactCommon'
        target.build_configurations.each do |config|
          config.build_settings['SWIFT_VERSION'] = '5.0'
        end
      end
      # Patch Hermes to remove the debug symbols entry from the Info.plist
      if target.name == "hermes-engine"
        installer.pods_project.files.each do |fileref|
          if fileref.path.end_with? "hermes.xcframework"
            hermes_plist_file = "#{fileref.real_path}/Info.plist"
            Open3.capture3('/usr/libexec/PlistBuddy', '-c', 'Delete :AvailableLibraries:0:DebugSymbolsPath', hermes_plist_file)
            Open3.capture3('/usr/libexec/PlistBuddy', '-c', 'Delete :AvailableLibraries:1:DebugSymbolsPath', hermes_plist_file)
            Open3.capture3('/usr/libexec/PlistBuddy', '-c', 'Delete :AvailableLibraries:2:DebugSymbolsPath', hermes_plist_file)
          end
        end
      end
    end
  end
end
